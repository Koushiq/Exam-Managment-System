@model ExamManagementSystem.Models.DataAccess.Question

@{
    ViewBag.Title = "Edit";
    ViewBag.Check = "checked='checked'";
}

<h2>Edit</h2>

<div class="row mb-4 border-top">
    <div class="col-md-12">
        Add New Question
    </div>
    <div class="col-md-12">
        <input type="hidden" name="ExamId" value="@Model.ExamId" />
        <input type="hidden" name="QuestionId" value="@Model.Id" />

        <div class="form-group">
            <label for="Statement">Statement</label>
            <textarea name="Statement" class="form-control input-area" id="Statement">@Model.Statement</textarea>
            <small class="text-danger" id="errStatement"></small>
        </div>
        <div class="form-group">
            <label for="Marks">Marks</label>
            <input type="number" name="Marks" class="form-control input-area" id="Marks" value="@Model.Marks">
            <small class="text-danger" id="errMarks"></small>
        </div>
        @*<div class="form-group">
                <label>Select Type</label>
                <br />
                <div class="form-check-inline">
                    <label class="form-check-label">
                        <input type="radio" class="form-check-input" name="Type" value="MCQ" @if (Model.Type == "MCQ") { @ViewBag.Check}> MCQ Single
                    </label>
                </div>
                <div class="form-check-inline">
                    <label class="form-check-label">
                        <input type="radio" class="form-check-input" name="Type" value="Check" @if (Model.Type == "Check") { @ViewBag.Check}> MCQ Multiple
                    </label>
                </div>
                <div class="form-check-inline">
                    <label class="form-check-label">
                        <input type="radio" class="form-check-input" name="Type" value="Text" @if (Model.Type == "Text") { @ViewBag.Check}> Text
                    </label>
                </div>
                <div class="form-check-inline">
                    <label class="form-check-label">
                        <input type="radio" class="form-check-input" name="Type" value="Descriptive" @if (Model.Type == "Descriptive") { @ViewBag.Check}> File Upload
                    </label>
                </div>
                <small class="text-danger" id="errType"></small>
            </div>*@
    </div>
    <div class="col-md-12 append-type">

        @if (Model.Type == "Text")
        {
            <div class="form-group for-descriptive">
                <label for="AnswerText">Answer for this Question</label>
                <textarea name="AnswerText" id="AnswerText" class="form-control input-area">@Model.AnswerText</textarea>
                <small class="text-danger" id="errAnswerText"></small>
            </div>
        }
        else if (Model.Type == "MCQ")
        {
            <div class="form-group for-mcq">
                <label>Options</label><br />
                <div class="row border p-1 mb-2">
                    <div class="col-md-1">
                        SL
                    </div>
                    <div class="col-md-9">
                        Option Text
                    </div>
                    <div class="col-md-2">
                        Correct Answer
                    </div>
                </div>
                @foreach (var option in Model.Options)
                {
                    ViewBag.SL = option.OptionId;
                    <div class="row border p-1 mb-2">
                        <div class="col-md-1">
                            @option.OptionId
                        </div>
                        <div class="col-md-9">
                            <input type="text" class="form-control new-option-text" data-sl="@option.OptionId" id="@option.Id" value="@option.OptionText" />
                        </div>
                        <div class="col-md-2">
                            <input type="radio" class="new-mcq-radio" name="new-mcq-radio" value="@option.OptionId" @if (((Model.CorrectAnswerBin & (1 << option.OptionId)) != 0)) { @ViewBag.check } />
                        </div>
                    </div>

                }
                <small class="text-danger"></small>
            </div>
            <button class="btn btn-info mt-1" id="addMCQOption">Add Another Option</button>

        }

        else if (Model.Type == "Check")
        {
            <div class="form-group for-multiple">
                <label>Options</label><br />
                <div class="row border p-1 mb-2">
                    <div class="col-md-1">
                        SL
                    </div>
                    <div class="col-md-9">
                        Option Text
                    </div>
                    <div class="col-md-2">
                        Correct Answer
                    </div>
                </div>
                @foreach (var option in Model.Options)
                {
                    ViewBag.SL = option.OptionId;

                    <div class="row border p-1 mb-2">
                        <div class="col-md-1">
                            @option.OptionId
                        </div>
                        <div class="col-md-9">
                            <input type="text" class="form-control new-option-text" data-sl="@option.OptionId" id="@option.Id" value="@option.OptionText" />
                        </div>
                        <div class="col-md-2">
                            <input type="checkbox" class="new-mcq-check" name="new-mcq-check" value="@option.OptionId" @if (((Model.CorrectAnswerBin & (1 << option.OptionId)) != 0)) { @ViewBag.check } />
                        </div>
                    </div>

                }
                <small class="text-danger"></small>
            </div>
            <button class="btn btn-info mt-1" id="addMultipleOption">Add Another Option</button>

        }


    </div>
    <div class="col-md-12">
        <div class="form-group d-flex justify-content-end">
            <button class="btn btn-secondary mr-2 reset" onclick="window.location.href='/Question/Edit/@Model.Id'">Clear</button>
            <a href="/Exam/Index/@Model.ExamId" class="btn btn-info mr-2">Back To Exam</a>
            <button type="submit" class="btn btn-primary sub">Submit</button>
        </div>
    </div>

</div>

@section scripts{
    <script>

        let mcqCount = parseInt("@ViewBag.SL"), multipleCount = parseInt("@ViewBag.SL");
        let type = "@Model.Type";
        let optionArray = [];
        let correctAnswerArray = [];


        $('.input-area').click(function () {
            $(this).siblings("small").html("");
        });

        $(document).on('click', '#addMultipleOption', function () {
            $('.for-multiple').append(`
                <div class="row border p-1 mb-2">
                    <div class="col-md-1">
                        ${++multipleCount}
                    </div>
                    <div class="col-md-9">
                        <input type="text" class="form-control new-option-text" data-sl="${multipleCount}"/>
                    </div>
                    <div class="col-md-2">
                        <input type="checkbox" class="new-mcq-check" name="new-mcq-check" value="${multipleCount}"/>
                    </div>
                </div>
             `);
        });

        $(document).on('click', '#addMCQOption', function () {
            const prevOptionText = $(`input[data-sl="${mcqCount}"]`).val().trim();
            if (prevOptionText.length < 1) {
                alert("Please enter option text in blank field first");
                return;
            }
            $('.for-mcq').append(`
                <div class="row border p-1 mb-2">
                    <div class="col-md-1">
                        ${++mcqCount}
                    </div>
                    <div class="col-md-9">
                        <input type="text" class="form-control new-option-text" data-sl="${mcqCount}"/>
                    </div>
                    <div class="col-md-2">
                        <input type="radio" class="new-mcq-radio" name="new-mcq-radio" value="${mcqCount}"/>
                    </div>
                </div>
             `);
        });


        $('.sub').click(function () {


            const _statement = $('#Statement').val().trim();
            if (_statement.length < 1) {
                $('#errStatement').html('Please Give Proper Question Statement');
                return;
            }
            const _marks = parseFloat($('#Marks').val().trim()) || 0;
            if (_marks < 0 || _marks == 0) {
                $('#errMarks').html('Please give proper marks');
                return;
            }

            if (type == null) {
                $('#errType').html('Please select question type');
                return;
            }

            if (type == "MCQ") {
                submitMCQ(_statement, _marks);
            } else if (type == "Text") {
                submitText(_statement, _marks);
            } else if (type == "Check") {
                submitCheck(_statement, _marks);
            } else if (type == "Descriptive") {
                submitDescriptive(_statement, _marks);
            }



        });

        function submitMCQ(_statement, _marks) {
            const correctAnswerArray = [parseInt($('input[name=new-mcq-radio]:checked').val())];
            if (correctAnswerArray.length < 1) {
                alert("Please select correct answer");
                return;
            }
            const _examId = "@Model.Id";

            const lastOptionText = $(`input[data-sl="${mcqCount}"]`).val().trim();

            if (lastOptionText.length < 1) {
                alert("Please provide option text");
                return;
            }

            $('.new-option-text').each(function () {
                const optionObj = {
                    optionText: $(this).val().trim(),
                    optionId: $(this).data("sl"),
                    Id: this.id || null
                };
                optionArray.push(optionObj);
            });

            console.log(_examId);
            console.log(_statement);
            console.log(_marks);
            console.log(type);
            console.log(correctAnswerArray);
            console.log(optionArray);

            const data = {};

            data.Options = JSON.stringify(optionArray);
            data.Question = JSON.stringify({
                ExamId: _examId,
                Statement: _statement,
                Type: type,
                Marks: _marks
            });
            data.CorrectAnswers = JSON.stringify(correctAnswerArray);

            sendToServer(data, '/Question/EditM');
        }

        function submitCheck(_statement, _marks) {
            $("input:checkbox[name=new-mcq-check]:checked").each(function () {
                console.log("xxxxx: ", $(this).val());
                correctAnswerArray.push($(this).val());
            });
            if (correctAnswerArray.length < 1) {
                alert("Please select correct answer");
                return;
            }

            const _examId = "@Model.Id";

            const lastOptionText = $(`input[data-sl="${multipleCount}"]`).val().trim();

            if (lastOptionText.length < 1) {
                alert("Please provide option text");
                return;
            }

            $('.new-option-text').each(function () {
                console.log("Id: ", this.id);
                const optionObj = {
                    optionText: $(this).val().trim(),
                    optionId: $(this).data("sl"),
                    Id: this.id || null

                };
                optionArray.push(optionObj);
            });

            console.log(optionArray);

            //console.log(_examId);
            //console.log(_statement);
            //console.log(_marks);
            //console.log(type);
            //console.log(correctAnswerArray);
            //console.log(optionArray);

            const data = {};

            data.Options = JSON.stringify(optionArray);
            data.Question = JSON.stringify({
                ExamId: _examId,
                Statement: _statement,
                Type: type,
                Marks: _marks
            });
            data.CorrectAnswers = JSON.stringify(correctAnswerArray);

            sendToServer(data, '/Question/EditM');
        }

        function submitText(_statement, _marks) {
            const _answerText = $('#AnswerText').val().trim();
            if (_answerText.length < 1) {
                _answerText = null;
            }
            const _examId = "@Model.Id";

            console.log(_examId);
            console.log(_statement);
            console.log(_answerText);
            console.log(_marks);
            console.log(type);

            const data = {};

            data.Question = JSON.stringify({
                ExamId: _examId,
                Statement: _statement,
                Type: type,
                Marks: _marks,
                AnswerText: _answerText
            });

            sendToServer(data, '/Question/Edit');
        }

        function submitDescriptive(_statement, _marks) {

            const _examId = "@Model.Id";

            console.log(_examId);
            console.log(_statement);
            console.log(_marks);
            console.log(type);

            const data = {};

            data.Question = JSON.stringify({
                ExamId: _examId,
                Statement: _statement,
                Type: type,
                Marks: _marks,
                AnswerText: null
            });

            sendToServer(data, '/Question/Edit');
        }



        function sendToServer(data, url) {
            //return;
            data.Id = JSON.stringify(@Model.Id);
            $.ajax({
                url: url,
                type: "post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                success: function (response) {
                    console.log(response);
                    optionArray = [];
                    correctAnswerArray = [];
                    window.location.href = "/Exam/Index/@Model.ExamId";
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus, errorThrown);
                    optionArray = [];
                    correctAnswerArray = [];
                }
            });
        }


    </script>
}
