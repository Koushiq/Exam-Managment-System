@model ExamManagementSystem.Models.DataAccess.User
@{
    Layout = null;
}
@{string selected = "selected";}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Signup</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @value = Model?.Username } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Usertype, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" name="Usertype">
                        <option @if (string.IsNullOrEmpty(Model?.Usertype)) { @selected } value="">
                            Select User Type
                        </option>

                        <option @if (Model?.Usertype == "student") { @selected } value="student">
                            Student
                        </option>
                        <option @if (Model?.Usertype == "teacher") { @selected } value="teacher">
                            Teacher
                        </option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Usertype, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @value = Model?.Email } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", @value = Model?.Firstname } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @value = Model?.Lastname } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control"  name="Gender">
                        <option @if (string.IsNullOrEmpty(Model?.Gender)) { @selected } value="">
                            Select User Type
                        </option>

                        <option @if (Model?.Gender == "male") { @selected } value="male">
                            Male
                        </option>
                        <option @if (Model?.Gender == "female") { @selected } value="female">
                            Female
                        </option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control", @value = Model?.Dob } })
                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            </div>
            }
            <div>
                Or, @Html.ActionLink("Go to login", "Login")
            </div>
    </body>
</html>
